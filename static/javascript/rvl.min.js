/*!
 * rvl.io 1.0.0 (2013-02-16, 10:09)
 * http://www.rvl.io
 *
 * Copyright (C) 2012 rvl.io
 */
window.RVL = {}, window.RVL.views = {}, $(function() {
	function e() {
		$("html").addClass("loaded").toggleClass("touch", RVL.IS_TOUCH_DEVICE), t(), n(), i(), $(window).on("resize", t)
	}

	function t() {
		var e = window.innerHeight - 1;
		$("body").css("min-height", Math.max(e, 600)), $("#modal").css("height", e)
	}

	function n() {
		if (document.querySelector(".fb-like") && ($("body").append('<div id="fb-root"></div>'), function(e, t, n) {
			var i, o = e.getElementsByTagName(t)[0];
			e.getElementById(n) || (i = e.createElement(t), i.id = n, i.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=178466085544080", o.parentNode.insertBefore(i, o))
		}(document, "script", "facebook-jssdk")), document.querySelector(".twitter-share-button") && function(e, t, n) {
			var i, o = e.getElementsByTagName(t)[0];
			e.getElementById(n) || (i = e.createElement(t), i.id = n, i.src = "//platform.twitter.com/widgets.js", o.parentNode.insertBefore(i, o))
		}(document, "script", "twitter-wjs"), document.querySelector(".g-plusone")) {
			var e = document.createElement("script");
			e.type = "text/javascript", e.async = !0, e.src = "https://apis.google.com/js/plusone.js";
			var t = document.getElementsByTagName("script")[0];
			t.parentNode.insertBefore(e, t)
		}
	}

	function i() {
		var e = $(document.body);
		e.hasClass("index-view") ? RVL.views.index() : e.hasClass("registration-view") ? RVL.views.registration() : e.hasClass("user-view") ? RVL.views.user() : e.hasClass("deck-view") ? RVL.views.deck() : e.hasClass("edit-view") ? RVL.views.edit() : e.hasClass("embed-view") ? RVL.views.embed() : e.hasClass("present-view") ? RVL.views.present() : RVL.views.text()
	}
	RVL.IS_TOUCH_DEVICE = !! ("ontouchstart" in window), e()
}), RVL.config = {
	LOGIN_STATUS_INTERVAL: 6e4,
	UNSAVED_CHANGES_INTERVAL: 1e3,
	AJAX_DELETE_DECK: "/ax/deleteDeck",
	AJAX_PUBLISH_DECK: "/ax/publishDeck",
	AJAX_UNPUBLISH_DECK: "/ax/unpublishDeck",
	AJAX_UPDATE_DECK: "/ax/updateDeck",
	AJAX_UPDATE_DECK_SETTINGS: "/ax/updateDeckSettings",
	AJAX_CHECK_DECK_NAME: "/ax/checkDeckName",
	AJAX_CHECK_USER_NAME: "/ax/checkUserName"
}, RVL.util = function() {
	return {
		getQuery: function() {
			var e = {};
			return location.search.replace(/[A-Z0-9]+?=(\w*)/gi, function(t) {
				e[t.split("=").shift()] = t.split("=").pop()
			}), e
		},
		isIE: function() {
			return navigator.userAgent.match(/MSIE\s[0-9]/gi)
		},
		html: {
			indent: function(e) {
				var t = "",
					n = /(>)(<)(\/*)/g,
					i = 0;
				return e = e.replace(n, "$1\r\n$2$3"), jQuery.each(e.split("\r\n"), function(e, n) {
					var o = 0;
					n.match(/.+<\/\w[^>]*>$/) ? o = 0 : n.match(/^<\/\w/) ? 0 !== i && (i -= 1) : o = n.match(/^<\w[^>]*[^\/]>.*$/) && !n.match(/^<(br|img).*>\s?$/) ? 1 : 0;
					for (var s = "", a = 0; i > a; a++) s += "    ";
					t += s + n + "\r\n", i += o
				}), t
			},
			trimCode: function(e) {
				$(e).find("pre code").each(function() {
					var e = $(this).parent("pre"),
						t = e.html(),
						n = $.trim(t);
					t !== n && e.html(n)
				})
			},
			removeAttributes: function(e) {
				e = $(e);
				var t = $.map(e.get(0).attributes, function(e) {
					return e.name
				});
				$.each(t, function(t, n) {
					e.removeAttr(n)
				})
			}
		}
	}
}(), $(function() {
	RVL.modal = function() {
		function e() {
			var e, t, n = !1,
				i = !1,
				o = a.find(".create form"),
				s = o.find("input[type=text]"),
				l = o.find("input[type=submit]"),
				r = a.find(".create .error");
			l.addClass("disabled"), s.keyup(function() {
				c()
			}), o.submit(function(e) {
				n ? (i = !0, e.preventDefault()) : l.hasClass("disabled") && (alert("Please enter a valid name"), e.preventDefault())
			});
			var c = function() {
				s.val().length > 1 ? (e && e.abort(), n = !0, clearTimeout(t), t = setTimeout(function() {
					e = $.ajax({
						url: RVL.config.AJAX_CHECK_DECK_NAME,
						data: {
							deckName: s.val()
						},
						success: function(e) {
							e.nameValid === !0 ? (l.removeClass("disabled"), r.text("")) : (l.addClass("disabled"), r.text(e.errorMsg)), n = !1, i && o.submit(), i = !1
						},
						error: function() {
							l.addClass("disabled"), r.text(""), n = !1, i && o.submit(), i = !1
						}
					})
				}, 250)) : l.addClass("disabled")
			}
		}

		function t() {
			RVL.htmlEditor.env.document.setValue(RVL.util.html.indent($(Reveal.getCurrentSlide()).html())), RVL.htmlEditor.focus(), a.find(".discard-changes").click(function() {
				RVL.modal.close()
			}), a.find(".save-changes").click(function() {
				RVL.views.edit.writeHTMLToCurrentSlide(RVL.htmlEditor.env.document.getValue()), RVL.modal.close()
			})
		}

		function n() {
			a.find(".done").click(function() {
				RVL.modal.close()
			})
		}

		function i() {
			a.find(".done").click(function() {
				RVL.modal.close()
			})
		}

		function o() {
			a.find(".ignore").click(function() {
				RVL.modal.close()
			}), a.find(".retry").click(function() {
				RVL.views.edit.checkLogin(!0)
			})
		}

		function s(e) {
			function t() {
				var t = document.location.protocol + "//" + document.location.host + "/" + e.userName + "/" + e.deckName,
					n = t + "/embed",
					i = '<iframe src="' + n + '" width="' + h + '" height="' + v + '" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';
				m.text(i), f.val(t)
			}

			function n(e) {
				e.preventDefault(), m.focus().select()
			}

			function i(e) {
				e.preventDefault(), f.focus().select()
			}

			function o() {
				RVL.modal.close()
			}

			function s() {
				h = parseInt(d.val(), 10) || 1, v = parseInt(u.val(), 10) || 1, t()
			}
			if ("string" != typeof e.userName || "string" != typeof e.deckName) throw "Must specify userName and deckName of deck to embed.";
			var l = 576,
				r = 420,
				c = a.find(".share-deck"),
				d = c.find(".embed .size input[name=width]"),
				u = c.find(".embed .size input[name=height]"),
				m = c.find(".embed textarea"),
				f = c.find(".url input"),
				h = l,
				v = r;
			c.find(".done").on("click", o), f.on("mousedown", i), m.on("mousedown", n), d.on("change keyup", s), u.on("change keyup", s), d.val(h), u.val(v), t()
		};

		var a = $("#modal"),
			l = $("#modal-cover");
		return $(document).keyup(function(e) {
			27 === e.keyCode && RVL.modal.close()
		}), $("#modal .close").click(function() {
			RVL.modal.close()
		}), {
			closeTimeout: null,
			open: function(r, c) {
				switch (r) {
					case "create":
						e(c);
						break;
					case "edit-html":
						t(c);
						break;
					case "settings":
						n(c);
						break;
					case "download":
						i(c);
						break;
					case "no-session":
						o(c);
						break;
					case "share-deck":
						s(c)
				}
				$("html").addClass("modal-open"), clearTimeout(this.closeTimeout), a.find(">div").removeClass("visible"), a.find("." + r).addClass("visible"), a.add(l).click(function(e) {
					e.target === this && RVL.modal.close()
				})
			},
			close: function() {
				$("html").removeClass("modal-open"), a.find(".create form").unbind(), a.find(".create form input[type=text]").unbind(), a.find(".create form input[type=submit]").unbind(), this.closeTimeout = setTimeout(function() {
					a.find(">div").removeClass("visible")
				}, 400)
			},
			isOpen: function(e) {
				var t = $("html").hasClass("modal-open");
				return t && e && (t = a.find("." + e).hasClass("visible")), t
			}
		}
	}()
}), RVL.notify = function(e, t, n) {
	0 === $(".notifications").length && $(document.body).append('<div class="notifications"></div>');
	var i = $("<p>").html(e).addClass(t || "").appendTo($(".notifications"));
	setTimeout(function() {
		i.addClass("show"), setTimeout(function() {
			i.fadeOut(600, function() {
				$(this).remove()
			})
		}, n || 2e3)
	}, 1)
}, RVL.header = function() {
	function l(e) {                
	      e.preventDefault(); 
	      var next = window.location.pathname;                                                                                     
          var url = $(this).attr('href');                      
		  $.post(url, {next:next}, function() {window.location.href='/'})                                                   
          }
	function e() {
		setTimeout(function() {
			$("header h1").addClass("open")
		}, 600), $("a.sign-in, a.sign-up").on("click", n), $('a.sign-out').on('click', l);
	}

	function t() {
		var next = window.location.pathname;
			var e = [{
			type: "direct",
			title: "Google",
			img: "google.png",
			hint: "/login/google-oauth2/"
		}, {
			type: "direct",
			title: "Github",
			img: "github.png",
			hint: "/login/github"
		}, {
			type: "direct",
			title: "LinkedIn",
			img: "linkedin.png",
			hint: "/login/linkedin"
		}, {
			type: "direct",
			title: "Instagram",
			img: "instagram.png",
			hint: "/login/instagram"
		}, {
			type: "direct",
			title: "Bitbucket",
			img: "bitbucket.png",
			hint: "/login/bitbucket"
		}, {	
			type: "direct",
			title: "Tumblr",
			img: "tumblr.png",
			hint: "/login/tumblr"
		}, {
			type: "direct",
			title: "Stackoverflow",
			img: "stackoverflow.png",
			hint: "/login/stackoverflow"
		}, {	
			type: "direct",
			title: "Trello",
			img: "trello.png",
			hint: "/login/trello"	
		}],
			t = "";
		$.each(e, function(e, n) {
			t += ['<li class="', n.type, '" title="', n.title, '"><img src="/static/images/', n.img, '" alt="icon" width="150" height="70" /><span>', n.hint + '?next=' + next, "</span></li>"].join("")
		}), $(".login .providers").html(t)
	}

	function n(e) {
		e.preventDefault(), t(), "function" == typeof $("form.openid").openid ? ($("form.openid").openid(), RVL.modal.open("login")) : RVL.modal.open("create")
	}

	function i(e) {
		e.preventDefault(), RVL.modal.open("create"), setTimeout(function() {
			$("#modal .create input[type=text]").focus()
		}, 50)
	}
	e()
}, RVL.views.registration = function() {
	function e() {
		n.val().length > 2 && n.val().match(/^[a-zA-Z][0-9a-zA-Z_]+$/gi) ? (a && a.abort(), r = !0, clearTimeout(s), s = setTimeout(function() {
			a = $.ajax({
				url: RVL.config.AJAX_CHECK_USER_NAME,
				data: {
					userName: n.val()
				},
				success: function(e) {
					e.nameValid === !0 ? (l = !1, o.html(""), i.removeClass("disabled")) : (l = !0, o.html(e.errorMsg), i.addClass("disabled")), r = !1, c && t.submit(), c = !1
				},
				error: function() {
					l = !0, o.html(""), i.addClass("disabled"), r = !1, c && t.submit(), c = !1
				}
			})
		}, 500)) : n.val().length > 1 ? (i.addClass("disabled"), o.html("Must begin with A-Z, contain only alphanumeric characters or underscores, and be at least 3 characters long.")) : (i.addClass("disabled"), o.html(""))
	}
	RVL.header();
	var t = $("#username-form"),
		n = t.find("input[type=text]"),
		i = t.find("input[type=submit]"),
		o = $("#main .error"),
		s = -1,
		a = null,
		l = !1,
		r = !1,
		c = !1;
	n.keyup(function() {
		l = !1, e()
	}), t.submit(function(e) {
		r ? (c = !0, e.preventDefault()) : i.hasClass("disabled") && (alert("Please enter a valid name first"), e.preventDefault())
	})
}, RVL.views.index = function() {
	function e() {
		return $("html, body").animate({
			scrollTop: $("#features").offset().top - 20
		}, 1e3), !1
	}

	function t(e) {
		if (!RVL.IS_TOUCH_DEVICE && 0 === $("#demo-video").length) {
			var t = Math.min(.7 * $("#main").width(), .8 * window.innerHeight);
			$("#main").append('<iframe id="demo-video" width="100%" height="' + t + '" src="http://www.youtube.com/embed/LyWAc7dBvmA?autoplay=1&vq=hd720" frameborder="0" allowfullscreen></iframe>'), $("html, body").animate({
				scrollTop: $("#demo-video").offset().top - 20
			}, 1e3), e.preventDefault()
		}
	}
	RVL.header(), setTimeout(function() {
		$(".features-promo").css("opacity", 1)
	}, 600), $(".features-promo a").on("click", e), $("#main .demo").on("click", t)
}, RVL.views.user = function() {
	function e(e) {
		null === e.target.nodeName.match(/^a$/i) && (e.preventDefault(), window.location = $(this).find(">h2 a").attr("href"))
	}

	function t(e) {
		e.preventDefault(), window.location = $(this).parents("li").data("url") + "/edit"
	}

	function n(e) {
		e.preventDefault();
		var t = $(this).parents("li"),
			n = t.data("deckname");
		confirm('Are you sure you want to delete "' + n + '"?') && (t.find(".details span").text("Deleting..."), $.post(RVL.config.AJAX_DELETE_DECK, {
			deckName: n
		}, function(e) {
			e.success ? (RVL.notify("Deck deleted", "negative"), t.remove()) : RVL.notify("Failed to delete", "negative")
		}))
	}

	function i(e) {
		e.preventDefault();
		var t = $(this).parents("li"),
			n = t.data("deckname");
		confirm('Are you sure you want to make "' + n + '" public?') && (t.find(".details span").text("Publishing..."), $.post(RVL.config.AJAX_PUBLISH_DECK, {
			deckName: n
		}, function(e) {
			e.success ? (t.find(".details span").text("Published"), t.removeClass("private").addClass("public"), RVL.notify("Deck published", "positive")) : RVL.notify("Failed to publish", "negative")
		}))
	}

	function o(e) {
		e.preventDefault();
		var t = $(this).parents("li"),
			n = t.data("deckname");
		confirm('Are you sure you want to make "' + n + '" private?') && (t.find(".details span").text("Unpublishing..."), $.post(RVL.config.AJAX_UNPUBLISH_DECK, {
			deckName: n
		}, function(e) {
			e.success ? (t.find(".details span").text("Private"), t.removeClass("public").addClass("private"), RVL.notify("Deck unpublished", "positive")) : RVL.notify("Failed to unpublish", "negative")
		}))
	}
	RVL.header(), $("time").each(function() {
		$(this).text(moment($(this).attr("datetime")).format("MMM Do, YYYY"))
	}), $(".decks li").on("click", e), $(".decks li .edit").on("click", t), $(".decks li .delete").on("click", n), $(".decks li .publish").on("click", i), $(".decks li .unpublish").on("click", o)
}, RVL.views.edit = function() {
	function e() {
		Reveal.initialize({
			controls: !0,
			progress: !0,
			history: !1,
			center: !1,
			mouseWheel: !1,
			rollingLinks: !1,
			maxScale: 1,
			transition: RevealDeckSettings.transition,
			dependencies: [{
				src: "/s/lib/js/classList.js",
				condition: function() {
					return !document.body.classList
				}
			}, {
				src: "/s/lib/js/showdown.js",
				condition: function() {
					return !!document.querySelector("[data-markdown]")
				}
			}, {
				src: "/static/javascript/markdown.js",
				condition: function() {
					return !!document.querySelector("[data-markdown]")
				}
			}]
		}), Reveal.addEventListener("ready", function(e) {
			d(), c(e.currentSlide)
		}), Reveal.addEventListener("slidechanged", function(e) {
			d(), c(e.currentSlide)
		})
	}

	function t() {
		try {
			RVL.htmlEditor = ace.edit("ace"), RVL.htmlEditor.setTheme("ace/theme/monokai"), RVL.htmlEditor.setShowPrintMargin(!1);
			var e = require("ace/mode/html").Mode;
			RVL.htmlEditor.getSession().setMode(new e)
		} catch (t) {
			console.log("An error occurred while initializing the Ace editor.")
		}
	}

	function n() {
		var e = $(Reveal.getCurrentSlide());
		return e.parent("section.stack").length && (e = e.parent("section.stack")), e
	}

	function i() {
		M = l() !== z, M ? $(".save-deck").text("Save").removeClass("disabled") : $(".save-deck").text("Saved").addClass("disabled"), c($(".reveal .slides .present:not(.stack)"))
	}

	function o(e) {
		(M && !RVL.modal.isOpen("no-session") || e) && $.get("/ax/checkLogin").done(function(e) {
			e.loggedIn ? g() : w()
		})
	}

	function s() {
		$(".save-deck").text("Saving").addClass("disabled");
		var e = l();
		$.post(RVL.config.AJAX_UPDATE_DECK, $.extend({}, RevealConfig, {
			deckContent: e
		}), function(t) {
			t.updated ? (RevealConfig.currVersion = t.nextVersion, z = e, RVL.notify("Saved successfully", "positive")) : (RVL.notify("Failed to save", "negative"), t.loggedIn === !1 && w()), i()
		})
	}

	function a() {
		$.post(RVL.config.AJAX_UPDATE_DECK_SETTINGS, $.extend({}, RevealConfig, {
			deckThemeFont: RevealDeckSettings.themeFont,
			deckThemeColor: RevealDeckSettings.themeColor,
			deckTransition: RevealDeckSettings.transition
		}), function(e) {
			e.updated || RVL.notify("Failed to save settings", "negative")
		})
	}

	function l() {
		var e = $(".reveal .slides").children().map(function() {
			var e = $(this).clone();
			return e.find("section").add(e).each(function(e) {
				e = $(this), RVL.util.html.removeAttributes(e), RVL.util.html.trimCode(e), e.find("iframe").text("&nbsp;")
			}), e.wrap("<div>").parent().html()
		}).toArray().join("");
		return e
	}

	function r(e) {
		var t = e ? $(e) : $(".reveal .slides section:not(.stack)");
		t.each(function() {
			var e = $(this).attr("id", "s-" + K++);
			B.addInstance(e.get(0))
		})
	}

	function c(e) {
		e = $(e), e.length && Date.now() > F + 1e3 && e.toggleClass("overflowing", e.get(0).scrollHeight > e.outerHeight() + 10)
	}

	function d() {
		H.addClass("show"), U.addClass("show")
	}

	function u(e) {
		Reveal.getCurrentSlide().innerHTML = e, RVL.util.html.trimCode(Reveal.getCurrentSlide())
	}

	function m(e, t) {
		e && t && (RevealDeckSettings.themeFont = e, RevealDeckSettings.themeColor = t, $("#theme").attr({
			href: $("#theme").attr("href").replace(/[a-z0-9\-_]*\.css/gi, e + "_" + t + ".css")
		}), f(), a(), Reveal.layout())
	}

	function f() {
		$("#modal .settings .theme li").removeClass("selected"), $("#modal .settings .theme li[data-font=" + RevealDeckSettings.themeFont + "]").filter("li[data-color=" + RevealDeckSettings.themeColor + "]").addClass("selected")
	}

	function h(e) {
		e && (RevealDeckSettings.transition = e, $("#modal .settings .transition li").each(function() {
			$(".reveal").removeClass($(this).attr("data-transition"))
		}), $(".reveal").addClass(e), v(), a())
	}

	function v() {
		$("#modal .settings .transition li").removeClass("selected"), $("#modal .settings .transition li[data-transition=" + RevealDeckSettings.transition + "]").addClass("selected")
	}

	function p() {
		var e = $(".reveal .slides");
		$(".reveal .slides:not(.stack) .present");
		var t = {
			left: (window.innerWidth - e.width() * Reveal.getScale()) / 2,
			top: (window.innerHeight - e.height() * Reveal.getScale()) / 2
		};
		q.css(t)
	}

	function g() {
		P && (P = !1, RVL.modal.close())
	}

	function w() {
		P || (P = !0, RVL.modal.open("no-session"))
	}

	function k() {
		$(".reveal .slides section").length > 1 && (q.show(), p())
	}

	function b() {
		q.hide()
	}

	function R(e) {
		e.preventDefault();
		var t = $('<section class="future"><h2>Title</h2></section>').insertAfter(n());
		setTimeout(Reveal.navigateRight, 1), r(t.get(0))
	}

	function y(e) {
		e.preventDefault();
		var t = $(".reveal .slides>.present");
		t.hasClass("stack") || (t.wrapInner("<section>").addClass("present").removeAttr("contenteditable"), r(t.find(">section").get(0)), Reveal.navigateDown());
		var n = $('<section class="future"><h2>Title</h2></section>').insertAfter(Reveal.getCurrentSlide());
		r(n.get(0)), setTimeout(function() {
			Reveal.navigateDown()
		}, 1)
	}

	function L() {
		confirm("Are you sure you want to remove this slide?") && (0 === $(".reveal .slides .present .present").remove().length ? $(".reveal .slides>section").length > 1 && $(".reveal .slides>.present").remove() : 1 === $(".reveal .slides .present>section").length && $(".reveal .slides .present>section:eq(0)").unwrap(), Reveal.navigateTo(), d())
	}

	function C() {
		var e = $(".reveal .slides").children().map(function() {
			var e = $(this).clone();
			return e.find("section").add(e).each(function() {
				var e = $.map(this.attributes, function(e) {
					return e.name
				}),
					t = $(this);
				$.each(e, function(e, n) {
					t.removeAttr(n)
				})
			}), e.wrap("<div>").parent().html()
		}).toArray().join("");
		e = '<div class="slides">' + e + "</div>", $("#modal .download textarea").text(RVL.util.html.indent(e)), RVL.modal.open("download")
	}

	function V() {
		s()
	}

	function S(e) {
		if (e.preventDefault(), !M || confirm("You have unsaved changes, continue anyway?")) {
			var t = $(".reveal .slides>.present").index(),
				n = $(".reveal .slides>.present>.present").index();
			window.open(window.location.href.replace("/edit", "/fullscreen/#/" + t + (0 === n || -1 === n ? "" : "/" + n)), "_blank")
		}
	}

	function D() {
		RVL.modal.open("settings");
		var e = $("#modal .settings .theme li.selected").get(0),
			t = $("#modal .settings .transition li.selected").get(0);
		e && "function" == typeof e.scrollIntoView && e.scrollIntoView(), t && "function" == typeof t.scrollIntoView && t.scrollIntoView()
	}

	function E(e) {
		e.preventDefault(), $(this).text("Working..."), $.post(RVL.config.AJAX_PUBLISH_DECK, {
			deckName: RevealConfig.deckName
		}, function(e) {
			e.success ? ($(".options .publish").removeClass("publish").addClass("unpublish").text("Unpublish"), RVL.notify("Published", "positive")) : RVL.notify("Failed to unpublish", "negative")
		})
	}

	function A(e) {
		e.preventDefault(), $(this).text("Working..."), $.post(RVL.config.AJAX_UNPUBLISH_DECK, {
			deckName: RevealConfig.deckName
		}, function(e) {
			e.success ? ($(".options .unpublish").removeClass("unpublish").addClass("publish").text("Publish"), RVL.notify("Unpublished", "positive")) : RVL.notify("Failed to unpublish", "negative")
		})
	}

	function _() {
		m($(this).data("font"), $(this).data("color"))
	}

	function T() {
		h($(this).data("transition"))
	}

	function N(e) {
		27 === e.keyCode && $(".reveal .slides .present[contenteditable]").blur()
	}

	function x() {
		return M ? "You will lose your unsaved changes." : void 0
	}

	function j() {
		p()
	}

	function I(e) {
		if (!(9 !== e.keyCode || e.shiftKey || e.altKey || e.ctrlKey || e.metaKey)) {
			var t = $(e.target);
			t.is("section") && t.parents(".slides").length && e.preventDefault()
		}
	}
	if (RVL.header(), window.RevealDeckSettings || (window.RevealDeckSettings = {}), $.browser.msie && 10 > parseInt($.browser.version, 10)) return $(document.body).html('<div class="not-supported"><h2>Not Supported</h2><p>We\'re sorry but the rvl.io editor doesn\'t currently support the browser you\'re using. Please consider changing to a more modern browser, such as <a href="https://www.google.com/chrome">Google Chrome</a> or <a href="http://www.mozilla.org/firefox/">Firefox</a>.</p></div>'), void 0;
	RevealDeckSettings.themeFont = RevealDeckSettings.themeFont || "league", RevealDeckSettings.themeColor = RevealDeckSettings.themeColor || "grey-blue", RevealDeckSettings.transition = RevealDeckSettings.transition || "default";
	var H = $(".add-horizontal-slide"),
		U = $(".add-vertical-slide"),
		q = $(".remove-slide"),
		F = Date.now(),
		K = 0,
		z = null,
		M = !1,
		P = !1,
		B = new nicEditor;
	B.setPanel("toolbar"), e(), t(), d(), r(), v(), f(), z = l(), setInterval(i, RVL.config.UNSAVED_CHANGES_INTERVAL), setInterval(o, RVL.config.LOGIN_STATUS_INTERVAL), $(".reveal .slides section.present").live("focus", k), $(".reveal .slides section.present").live("blur", b), $(".reveal .slides section").live("keydown", I), $(".options .save-deck").on("click", V), $(".options .download-deck").on("click", C), $(".options .preview-deck").on("click", S), $(".options .settings").on("click", D), $(".options .publish").live("click", E), $(".options .unpublish").live("click", A), $("#modal .settings .theme li").on("click", _), $("#modal .settings .transition li").on("click", T), $(window).on("keyup", N), $(window).on("beforeunload", x), $(window).on("resize", j), H.on("click", R), U.on("click", y), q.on("mousedown", L), RVL.views.edit = {
		writeHTMLToCurrentSlide: u,
		checkLogin: o
	}
}, RVL.views.deck = function() {
	function e() {
		RVL.header(), $("time").each(function() {
			$(this).text(moment($(this).attr("datetime")).fromNow())
		}), Reveal.initialize({
			controls: !0,
			progress: !0,
			history: !1,
			center: !1,
			mouseWheel: !1,
			margin: .05,
			transition: RevealDeckSettings.transition,
			dependencies: [{
				src: "/static/javascript/highlight.js",
				async: !0,
				callback: function() {
					window.hljs.initHighlightingOnLoad()
				}
			}, {
				src: "/static/javascript/classList.js",
				condition: function() {
					return !document.body.classList
				}
			}, {
				src: "/static/javascript/showdown.js",
				condition: function() {
					return !!document.querySelector("[data-markdown]")
				}
			}, {
				src: "/static/javascript/data-markdown.js",
				condition: function() {
					return !!document.querySelector("[data-markdown]")
				}
			}]
		}), t(), $(".options .share-button").on("click", n), $(".options .comment-button").on("f", i), $(".options .fullscreen-button").on("click", o), $(document).bind("webkitfullscreenchange mozfullscreenchange fullscreenchange", Reveal.layout)
	}

	function t() {
		var e = "rvlio",
			t = window.location.pathname;
		"/" === t.charAt(t.length - 1) && (t = t.slice(0, t.length - 1)), window.disqus_identifier = t;
		var n = document.createElement("script");
		n.type = "text/javascript", n.async = !0, n.src = "http://" + e + ".disqus.com/embed.js", (document.getElementsByTagName("head")[0] || document.getElementsByTagName("body")[0]).appendChild(n);
		var i = document.createElement("script");
		i.async = !0, i.type = "text/javascript", i.src = "http://" + e + ".disqus.com/count.js", (document.getElementsByTagName("head")[0] || document.getElementsByTagName("body")[0]).appendChild(i)
	}

	function n() {
		return "undefined" != typeof RevealConfig && "string" == typeof RevealConfig.userName && "string" == typeof RevealConfig.deckName ? RVL.modal.open("share-deck", {
			userName: RevealConfig.userName,
			deckName: RevealConfig.deckName
		}) : RVL.notify("Oops, something went wrong...", "negative"), !1
	}

	function i() {
		return $("html, body").animate({
			scrollTop: $("#comments").offset().top - 20
		}, 1e3), !1
	}

	function o() {
		var e = $(".reveal-viewport").get(0),
			t = e.requestFullScreen || e.webkitRequestFullScreen || e.mozRequestFullScreen || e.msRequestFullScreen;
		return t ? (t.apply(e), !1) : void 0
	}
	e()
}, RVL.views.embed = function() {
	function e() {
		$(".embed-footer").is(":visible") ? $(".reveal").height(window.innerHeight - $(".embed-footer").height()) : $(".reveal").height("100%")
	}

	function t() {
		var e = $(".reveal-viewport").get(0),
			t = e.requestFullScreen || e.webkitRequestFullScreen || e.mozRequestFullScreen || e.msRequestFullScreen;
		return t ? (t.apply(e), !1) : void 0
	}
	Reveal.initialize({
		controls: !0,
		progress: !0,
		history: !0,
		center: !1,
		mouseWheel: !1,
		transition: RevealDeckSettings.transition,
		dependencies: [{
			src: "/s/lib/js/highlight.js",
			async: !0,
			callback: function() {
				window.hljs.initHighlightingOnLoad()
			}
		}, {
			src: "/s/lib/js/classList.js",
			condition: function() {
				return !document.body.classList
			}
		}, {
			src: "/s/lib/js/showdown.js",
			condition: function() {
				return !!document.querySelector("[data-markdown]")
			}
		}, {
			src: "/static/javascript/data-markdown.js",
			condition: function() {
				return !!document.querySelector("[data-markdown]")
			}
		}, {
			src: "/s/plugin/postmessage/postmessage.js"
		}]
	}), $("a").each(function() {
		var e = $(this),
			t = e.attr("href");
		t.match(/^#/gi) || (t.match(/http\:\/\/(www\.)?rvl\.io/gi) || !t.match(/http|www/gi) ? e.attr("target", "_top") : e.attr("target", "_blank"))
	}), $(window).on("resize", e), $(document).bind("webkitfullscreenchange mozfullscreenchange fullscreenchange", Reveal.layout), $(".embed-footer .fullscreen").on("click", t), e()
}, RVL.views.present = function() {
	Reveal.initialize({
		controls: !0,
		progress: !0,
		history: !0,
		center: !1,
		mouseWheel: !1,
		transition: RevealDeckSettings.transition,
		dependencies: [{
			src: "/s/lib/js/highlight.js",
			async: !0,
			callback: function() {
				window.hljs.initHighlightingOnLoad()
			}
		}, {
			src: "/s/lib/js/classList.js",
			condition: function() {
				return !document.body.classList
			}
		}, {
			src: "/s/lib/js/showdown.js",
			condition: function() {
				return !!document.querySelector("[data-markdown]")
			}
		}, {
			src: "/static/javascript/data-markdown.js",
			condition: function() {
				return !!document.querySelector("[data-markdown]")
			}
		}, {
			src: "/s/plugin/postmessage/postmessage.js"
		}]
	}), $("a").each(function() {
		var e = $(this),
			t = e.attr("href");
		t.match(/^#/gi) || (t.match(/http\:\/\/(www\.)?rvl\.io/gi) || !t.match(/http|www/gi) ? e.attr("target", "_top") : e.attr("target", "_blank"))
	})
}, RVL.views.text = function() {
	RVL.header()
};
